name: Deploy to production
on:
  push:
    branches: [ deploy ]
  pull_request:
    branches: [ deploy ]

jobs:
  #Info to discord
  notify-started:
    name: Notify discord server that the deployment started
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "title": "Statut",
                "color": 13743117,
                "url": "https://github.com/leoboyerbx/toodoo/actions/runs/${{ github.run_id }}",
                "description": "Suivre l'√©x√©cution de la pipeline",
                "footer": {
                    "text": "Pipeline lanc√© √† l'instant",
                    "icon_url": "https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif"
                }
              }
            ]
        uses: Ilshidur/action-discord@0.3.0
        with:
          args: 'üöÄ Un nouveau d√©ploiement a √©t√© d√©marr√© vers la prod !'
  # Build and deploy PWA
  build-pwa:
    name: Build PWA
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn generate
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: mobile-app/dist
  deploy-pwa:
    name: Deploy PWA
    needs: build-pwa
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-app
    steps:
      - uses: actions/checkout@v2
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: mobile-app/dist
      - name: rsync deployments
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete --exclude=".well-known"
          path: mobile-app/dist/
          remote_path: ~/sites/toodoo/app/
          remote_host: ${{ secrets.PROD_HOST }}
          remote_port: ${{ secrets.PROD_PORT }}
          remote_user: ${{ secrets.PROD_USERNAME }}
          remote_key: ${{ secrets.PROD_KEY }}

  # Build and deploy cast app
#  build-cast:
#    name: Build cast app
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: cast-app
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: 14
#      - run: yarn install --frozen-lockfile
#      - run: yarn build
#      - run: yarn generate
#      - uses: actions/upload-artifact@v2
#        with:
#          name: dist
#          path: cast-app/dist
#  deploy-cast:
#    needs: build-cast
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: cast-app
#    steps:
#      - uses: actions/checkout@v2
#      - name: Download build artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: dist
#          path: cast-app/dist
#      - name: rsync deployments
#        uses: burnett01/rsync-deployments@4.1
#        with:
#          switches: -avzr --delete
#          path: cast-app/dist/
#          remote_path: ~/sites/toodoo/boss/
#          remote_host: ${{ secrets.PROD_HOST }}
#          remote_port: ${{ secrets.PROD_PORT }}
#          remote_user: ${{ secrets.PROD_USERNAME }}
#          remote_key: ${{ secrets.PROD_KEY }}

  # Build and deploy server
  compile-server:
    name: Compile server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn install --frozen-lockfile
      - run: yarn compile
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: server/dist

  deploy-server:
    name: Deploy server
    needs: compile-server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: server/dist

      - name: rsync deployments
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete --exclude=".env.local" --exclude="public" --exclude="node_modules"
          path: server
          remote_path: ~/sites/toodoo
          remote_host: ${{ secrets.PROD_HOST }}
          remote_port: ${{ secrets.PROD_PORT }}
          remote_user: ${{ secrets.PROD_USERNAME }}
          remote_key: ${{ secrets.PROD_KEY }}

      - name: SSH deployment üì§
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_KEY }}
          port: ${{ secrets.PROD_PORT }}
          script: |
            cd ~/sites/toodoo/server
            yarn install --production
            dotenv -e .env.local -- npx prisma migrate deploy
            pm2 restart ecosystem.config.js
  upload-common:
    name: Upload common folder
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: rsync deployments
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          path: common
          remote_path: ~/sites/toodoo
          remote_host: ${{ secrets.PROD_HOST }}
          remote_port: ${{ secrets.PROD_PORT }}
          remote_user: ${{ secrets.PROD_USERNAME }}
          remote_key: ${{ secrets.PROD_KEY }}

  #Info to discord
  notify-ended:
    needs: [ deploy-pwa, upload-common ]
    #    needs: [ deploy-pwa, deploy-cast, upload-common ]
    name: Notify discord server that the deployment ended
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "title": "Statut",
                "color": 3201404,
                "url": "https://github.com/leoboyerbx/toodoo/actions/runs/${{ github.run_id }}",
                "description": "Voir le r√©sultat d'ex√©cution",
                "footer": {
                    "text": "‚úÖ Pipeline termin√© avec succ√®s"
                }
              }
            ]
        uses: Ilshidur/action-discord@0.3.0
        with:
          args: |
            ‚úÖ Le d√©ploiement a √©t√© r√©ussi !
  notify-failed:
    needs: [ deploy-pwa, upload-common ]
#    needs: [ deploy-pwa, deploy-cast, upload-common ]
    if: ${{ failure() }}
    name: Notify discord server that the deployment failed
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "title": "Statut",
                "color": 14369860,
                "url": "https://github.com/leoboyerbx/toodoo/actions/runs/${{ github.run_id }}",
                "description": "Voir le r√©sultat d'ex√©cution",
                "footer": {
                    "text": "‚ùå Pipeline en √©chec"
                }
              }
            ]
        uses: Ilshidur/action-discord@0.3.0
        with:
          args: |
            ‚ùå Le d√©ploiement a √©chou√©.
